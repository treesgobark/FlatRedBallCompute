<UserControl x:Class="OfficialPlugins.CollisionPlugin.Views.CollisionRelationshipView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OfficialPlugins.CollisionPlugin.Views"
             xmlns:VM="clr-namespace:OfficialPlugins.CollisionPlugin.ViewModels" xmlns:views="clr-namespace:OfficialPluginsCore.CollisionPlugin.Views"
             mc:Ignorable="d" 
             d:DesignWidth="600">
    <ScrollViewer>
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ComboBox  FontSize="26"
                              SelectedItem="{Binding FirstCollisionName}"
                              ItemsSource="{Binding FirstCollisionItemSource}"></ComboBox>
                    <Image ToolTip="This object is automatically partitioned, or it does not need partitioning" Grid.Column="1" Visibility="{Binding FirstPartitionEnabledVisibility}" Source="/OfficialPluginsCore;component/CollisionPlugin/Icons/PartitionEnabled.png"/>
                    <Button ToolTip="This object is not partitioned, so the collision relationship may run slowly" Grid.Column="1" Visibility="{Binding FirstNoPartitioningVisibility}" 
                            Click="FirstObjectCollisionPartitioningButtonClicked">
                        <Image Source="/OfficialPluginsCore;component/CollisionPlugin/Icons/NoPartitioning.png"></Image>
                    </Button>
                </Grid>
                <TextBlock Grid.Column="1" FontSize="26">vs</TextBlock>
                <Grid Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ComboBox FontSize="26"
                              SelectedItem="{Binding SecondCollisionName}"
                              ItemsSource="{Binding SecondCollisionItemSource}"></ComboBox>
                    <Image ToolTip="This object is automatically partitioned, or it does not need partitioning" Grid.Column="1" Visibility="{Binding SecondPartitionEnabledVisibility}" Source="/OfficialPluginsCore;component/CollisionPlugin/Icons/PartitionEnabled.png"></Image>
                    <Button ToolTip="This object is not partitioned, so the collision relationship may run slowly" Grid.Column="1" Visibility="{Binding SecondNoPartitioningVisibility}"
                            Click="SecondObjectCollisionPartitioningButtonClicked">
                        <Image Source="/OfficialPluginsCore;component/CollisionPlugin/Icons/NoPartitioning.png"></Image>
                    </Button>
                </Grid>

                <TextBlock Margin="0,5,0,0" Grid.Row="1" Grid.ColumnSpan="3">Subcollision:</TextBlock>

                <ComboBox Grid.Row="2"
                          IsEnabled="{Binding FirstSubCollisionEnabled}"
                          SelectedItem="{Binding FirstSubCollisionSelectedItem}"
                          ItemsSource="{Binding FirstSubCollisionItemsSource}"
                          Visibility="{Binding SubcollisionDropdownVisibility}"
                          ></ComboBox>
                <ComboBox Grid.Row="2" Grid.Column="2"
                          IsEnabled="{Binding SecondSubCollisionEnabled}"
                          SelectedItem="{Binding SecondSubCollisionSelectedItem}"
                          ItemsSource="{Binding SecondSubCollisionItemsSource}"
                          Visibility="{Binding SubcollisionDropdownVisibility}"
                          ></ComboBox>

                <TextBlock Grid.Row="3" Grid.ColumnSpan="3" TextWrapping="Wrap" 
                           Margin="10,0,0,0" FontSize="10"
                           Visibility="{Binding NoSubcollisionMessageVisibility}">
                    Subcollision cannot be set on Delegate Collision - the delegate can internally select which objects to collide.</TextBlock>


            </Grid>
            <TextBlock Background="DarkRed" Foreground="Yellow" FontSize="15"
                       TextWrapping="WrapWithOverflow"
                       Visibility="{Binding WarningVisibility}"
                       Padding="4"
                       Text="{Binding WarningText}"
                       >
            </TextBlock>
            <CheckBox VerticalContentAlignment="Center"
                      IsChecked="{Binding IsAutoNameEnabled}"
                      Margin="0,8,0,0"
                      >Auto-name Relationship</CheckBox>

            <CheckBox VerticalContentAlignment="Center"
                      IsChecked="{Binding IsCollisionActive}"
                      Margin="0,8,0,0">Is Collision Active</CheckBox>

            <TextBlock TextWrapping="WrapWithOverflow"
                       Visibility="{Binding InactiveMessageVisibility}"
                       Padding="4"
                       Margin="15,0,0,0"
                       Text="Inactive collisions will not automatically raise events and perform physics, but can be called manually in code"
                       />

            
            <GroupBox Header="Collision Limit" Visibility="{Binding CollisionLimitUiVisibility}">
                <StackPanel>
                    <RadioButton
                        IsChecked="{Binding IsAllCollisionLimitChecked}">All</RadioButton>
                    <RadioButton
                        IsChecked="{Binding IsFirstCollisionLimitChecked}">Stop After First</RadioButton>
                    <TextBlock Text="{Binding CollisionLimitExplanationText}"></TextBlock>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="List vs List Duplicate Collision Options" Visibility="{Binding ListVsListDuplicateVisibility}"  Margin="0,8,0,0">
                <StackPanel>
                    <RadioButton
                        IsChecked="{Binding IsPreventDoubleChecksChecked}">Prevent Double Checks per Frame</RadioButton>
                    <RadioButton
                        IsChecked="{Binding IsAllowDoubleChecksChecked}">Allow Double Checks per Frame</RadioButton>
                    <TextBlock TextWrapping="Wrap">Double checks should be performed if doing self-collision on an entity list with each item using a different subcollision</TextBlock>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Collision Physics" Margin="0,8,0,0" Visibility="{Binding CollisionPhysicsUiVisibility}">
                <StackPanel>
                    <RadioButton
                        IsChecked="{Binding IsNoPhysicsChecked}">No Physics</RadioButton>
                    <RadioButton
                        IsChecked="{Binding IsMoveCollisionChecked}">Move Collision (separate overlapping objects)</RadioButton>
                    <Grid Margin="10,0,0,0" 
                                Visibility="{Binding MoveCollisionVisibility}">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Width="80" HorizontalAlignment="Left" 
                                   Text="{Binding FirstMassText, FallbackValue=First Mass}"></TextBlock>
                        <TextBox Grid.Row="1" Margin="10,0,10,0"
                                     Text="{Binding FirstCollisionMass}"></TextBox>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" 
                                   Text="{Binding SecondMassText, FallbackValue=Second Mass}"></TextBlock>
                        <TextBox  Grid.Row="1" Grid.Column="1" Margin="10,0,10,0"
                                     Text="{Binding SecondCollisionMass}"></TextBox>
                    </Grid>
                    <RadioButton
                        IsChecked="{Binding IsMoveSoftCollisionChecked}">Move Soft Collision (separate overlapping objects over time)</RadioButton>
                    <Grid Margin="10,0,0,0"
                                Visibility="{Binding MoveSoftCollisionVisibility}">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock HorizontalAlignment="Left" Grid.Column="0"
                                   Text="{Binding FirstMassText, FallbackValue=First Mass}"></TextBlock>
                        <TextBox Margin="10,0,10,0" Grid.Row="1"
                                    Text="{Binding FirstCollisionMass}"></TextBox>

                        <TextBlock Grid.Column="1"
                                   Text="{Binding SecondMassText, FallbackValue=Second Mass}"></TextBlock>
                        <TextBox Grid.Column="1" Grid.Row="1" Margin="10,0,10,0"
                                    Text="{Binding SecondCollisionMass}"></TextBox>
                        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2">
                            <TextBlock>Separation Coefficient</TextBlock>
                            <TextBox  Width="80" Margin="5,0,0,0"
                                     Text="{Binding SoftCollisionCoefficient}"></TextBox>
                        </StackPanel>
                    </Grid>


                    <RadioButton
                        IsChecked="{Binding IsBounceCollisionChecked}">Bounce Collision</RadioButton>
                    <Grid Margin="10,0,0,0"
                                Visibility="{Binding BounceCollisionVisibility}">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock HorizontalAlignment="Left" Grid.Column="0"
                                   Text="{Binding FirstMassText, FallbackValue=First Mass}"></TextBlock>
                        <TextBox Margin="10,0,10,0" Grid.Row="1"
                                    Text="{Binding FirstCollisionMass}"></TextBox>

                        <TextBlock Grid.Column="1"
                                   Text="{Binding SecondMassText, FallbackValue=Second Mass}"></TextBlock>
                        <TextBox Grid.Column="1" Grid.Row="1" Margin="10,0,10,0"
                                    Text="{Binding SecondCollisionMass}"></TextBox>
                        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2">
                            <TextBlock Width="80">Elasticity</TextBlock>
                            <TextBox  Width="80"
                                     Text="{Binding CollisionElasticity}"></TextBox>
                        </StackPanel>
                    </Grid>
                    <RadioButton
                        IsChecked="{Binding IsPlatformerSolidCollisionChecked}"
                        Visibility="{Binding PlatformerOptionsVisibility}">Platformer Solid Collision</RadioButton>
                    <RadioButton
                        IsChecked="{Binding IsPlatformerCloudCollisionChecked}"
                        Visibility="{Binding PlatformerOptionsVisibility}">Platformer Cloud Collision</RadioButton>
                    <RadioButton
                        IsChecked="{Binding IsStackingCollisionChecked}"
                        Visibility="{Binding StackingCollisionVisibility}">Stacking Collision</RadioButton>
                        
                    <RadioButton
                        IsChecked="{Binding IsDelegateCollisionChecked}">Delegate Collision (delegate assigned in code)</RadioButton>
                    
                    <CheckBox Margin="0,5,0,0" Visibility="{Binding AutomaticallyApplyPhysicsVisibility}" IsChecked="{Binding IsAutomaticallyApplyPhysicsChecked}">Automatically Apply Physics On Collision</CheckBox>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Damage" Visibility="{Binding DamageValuesVisibility}" Margin="0,8,0,0">
                <StackPanel>
                    <CheckBox IsChecked="{Binding IsDealDamageChecked}">Deal Damage in Generated Code</CheckBox>
                    <CheckBox Visibility="{Binding DestroyFirstOnDamageVisibility}" IsChecked="{Binding IsDestroyFirstOnDamageChecked}" Content="{Binding DestroyFirstOnDamageText, FallbackValue=Destroy First on Damage}"></CheckBox>
                    <CheckBox Visibility="{Binding DestroySecondOnDamageVisibility}" IsChecked="{Binding IsDestroySecondOnDamageChecked}" Content="{Binding DestroySecondOnDamageText, FallbackValue=Destroy Second on Damage}"></CheckBox>
                </StackPanel>
            </GroupBox>
            
            <GroupBox Header="{Binding PlatformerValuesGroupHeader, FallbackValue=FirstObject Platformer Movement Values}" Visibility="{Binding PlatformerMovementValuesVisibility}" Margin="0,8,0,0">
                <Grid  Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <TextBlock VerticalAlignment="Center">Ground Movement:</TextBlock>
                    <ComboBox IsEditable="True" Grid.Column="1" Margin="2" 
                              ItemsSource="{Binding AvailablePlatformerVariableNames}"
                              SelectedItem="{Binding GroundPlatformerVariableName}"></ComboBox>

                    <TextBlock VerticalAlignment="Center" Grid.Row="1">Air Movement:</TextBlock>
                    <ComboBox IsEditable="True" Grid.Row="1" Grid.Column="1" Margin="2"  
                              ItemsSource="{Binding AvailablePlatformerVariableNames}"
                              SelectedItem="{Binding AirPlatformerVariableName}"></ComboBox>

                    <TextBlock VerticalAlignment="Center" Grid.Row="2">After Double Jump:</TextBlock>
                    <ComboBox IsEditable="True" Grid.Row="2" Grid.Column="1" Margin="2"  
                              ItemsSource="{Binding AvailablePlatformerVariableNames}"
                              SelectedItem="{Binding AfterDoubleJumpPlatformerVariableName}"></ComboBox>
                </Grid>

            </GroupBox>

            <GroupBox Header="Events" Margin="0,8,0,0">

                <StackPanel>
                    <ItemsControl Margin="14,0,0,0" Grid.Row="1" ItemsSource="{Binding Events}" HorizontalContentAlignment="Stretch" >
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <views:EventCell
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch">

                                </views:EventCell>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Button Margin="0,10,0,0" Click="AddEventButtonClicked" Visibility="{Binding AddEventButtonVisibility}">Add Event</Button>
                </StackPanel>

            </GroupBox>
        </StackPanel>
    </ScrollViewer>
</UserControl>
