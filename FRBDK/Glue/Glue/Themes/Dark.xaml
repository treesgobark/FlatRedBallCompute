<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="FlatRedBall.Glue.Controls"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:pt="http://propertytools.org/wpf"
                    >


    <Color x:Key="Black">#ff302C2E</Color>
    <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource Black}"/>
    <Color x:Key="BlackSelected">#ff3A3538</Color>
    <SolidColorBrush x:Key="BlackSelectedBrush" Color="{StaticResource BlackSelected}"/>

    <Color x:Key="DarkestGray">#ff5A5353</Color>
    <SolidColorBrush x:Key="DarkestGrayBrush" Color="{StaticResource DarkestGray}"/>

    <Color x:Key="DarkPurple">#ff564064</Color>
    <SolidColorBrush x:Key="DarkPurpleBrush" Color="{StaticResource DarkPurple}"/>
    <Color x:Key="DarkPurpleHighlight">#ff604770</Color>

    <Color x:Key="Purple">#ff8E478C</Color>
    <SolidColorBrush x:Key="PurpleBrush" Color="{StaticResource Purple}"/>
    <Color x:Key="PurpleHighlight">#ff994C97</Color>

    <Color x:Key="DarkestBluePurple">#ff39314B</Color>
    <SolidColorBrush x:Key="DarkestBluePurpleBrush" Color="{StaticResource DarkestBluePurple}"/>
    
    <Color x:Key="DarkestBluePurpleHighlight">#ff423956</Color>
    <SolidColorBrush x:Key="DarkestBluePurpleHighlightBrush" Color="{StaticResource DarkestBluePurpleHighlight}"/>


    <Color x:Key="DarkBluePurple">#ff4F546B</Color>
    <Color x:Key="BluePurple">#ff827094</Color>

    <Color x:Key="White">#ffDFF6F5</Color>
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource White}"/>

    <SolidColorBrush x:Key="Button.Static.Background" Color="{StaticResource DarkPurple}"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="{StaticResource DarkestBluePurple}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{StaticResource DarkPurpleHighlight}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{StaticResource DarkestBluePurpleHighlight}"/>
    
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="{StaticResource Purple}"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="{StaticResource DarkBluePurple}"/>

    <SolidColorBrush x:Key="Button.Disabled.Background" Color="{StaticResource DarkPurple}"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="{StaticResource Black}"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
    </Style>

    <Style TargetType="{x:Type xctk:SplitButton}">
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Background" Value="{StaticResource DarkestBluePurpleBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkestBluePurpleHighlightBrush}"/>

    </Style>


    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource DarkestBluePurpleBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkestBluePurpleHighlightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource DarkestBluePurpleBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkestBluePurpleHighlightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
    </Style>


    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource DarkestBluePurpleBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkestBluePurpleHighlightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
    </Style>

    <Style TargetType="{x:Type pt:TreeListBox}">
        <Setter Property="Background" Value="{StaticResource DarkestBluePurpleBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkestBluePurpleHighlightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
    </Style>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="Background" Value="{StaticResource DarkestBluePurpleBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkestBluePurpleHighlightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
    </Style>

    <Style TargetType="{x:Type UserControl}" x:Key="UserControlStyle">
        <Setter Property="Background" Value="{StaticResource BlackBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}"/>
    </Style>


    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource BlackBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}"/>
    </Style>

    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{StaticResource BlackBrush}"/>
        
    </Style>

    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource BlackBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}"/>
    </Style>

    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{StaticResource BlackSelectedBrush}"/>
    </Style>


    <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyle">
        <Setter Property="Background" Value="{StaticResource BlackBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border 
                                Name="Border"
                                Margin="0,0,-4,0" 
                                Background="{StaticResource BlackBrush}"
                                BorderBrush="{StaticResource  BlackBrush}" 
                                BorderThickness="1,1,1,1">
                            <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="12,2,12,2"
                                    RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BlackSelectedBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BlackBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BlackBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Background" Value="{StaticResource BlackSelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="BorderBrush" Value="{StaticResource DarkestGrayBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource DarkestGrayBrush}"/>
        <!--<Setter Property="Foreground" Value="{StaticResource BlackSelectedBrush}"/>-->
    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style TargetType="{x:Type GroupBox}" x:Key="GroupBoxStyle">
        <Setter Property="BorderBrush" Value="{StaticResource DarkestGrayBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="Transparent" CornerRadius="4" Grid.ColumnSpan="4" Grid.Column="0" Grid.RowSpan="3" Grid.Row="1"/>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="Transparent" CornerRadius="4" Grid.ColumnSpan="4" Grid.RowSpan="3" Grid.Row="1">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" CornerRadius="2"/>
                            </Border>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.RowSpan="2" Grid.Row="0">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Setter Property="Foreground" Value="{StaticResource BlackSelectedBrush}"/>-->
    </Style>


    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>







</ResourceDictionary>