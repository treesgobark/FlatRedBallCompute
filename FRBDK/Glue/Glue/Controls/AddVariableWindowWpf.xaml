<Window x:Class="FlatRedBall.Glue.Controls.AddVariableWindowWpf"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlatRedBall.Glue.Controls"
        mc:Ignorable="d"
        Title="New Variable" Height="450" Width="400">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Margin="10">
            <RadioButton IsChecked="{Binding IsExposedVariableChecked}">Expose an existing variable</RadioButton>
            <RadioButton IsChecked="{Binding IsTunneledVariableChecked}">Tunnel a variable in a contained object</RadioButton>
            <RadioButton IsChecked="{Binding IsNewVariableChecked}">Create a new variable</RadioButton>
        </StackPanel>
        <Separator Grid.Row="1"></Separator>
        
        <StackPanel x:Name="ExposeExistingUi" Grid.Row="2" Margin="10" Visibility="{Binding ExposeUiVisibility, FallbackValue=Collapsed}">
            <Label>Select an existing variable:</Label>
            <ComboBox x:Name="ExistingVariableComboBox" 
                      ItemsSource="{Binding AvailableExposedVariables}" 
                      SelectedItem="{Binding SelectedExposedVariable}"></ComboBox>
        </StackPanel>

        <StackPanel x:Name="TunnelVariableUi" Grid.Row="2" Margin="10" Visibility="{Binding TunnelUiVisibility, FallbackValue=Collapsed}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label VerticalAlignment="Center">Object:</Label>
                <Label Margin="0,5,0,0" Grid.Row="1" >Variable:</Label>
                <ComboBox SelectedItem="{Binding SelectedTunneledObject}" 
                          ItemsSource="{Binding AvailableTunneledObjects}"
                          Margin="0,5,0,0" Grid.Column="1"></ComboBox>
                <ComboBox SelectedItem="{Binding SelectedTunneledVariableName}" 
                          ItemsSource="{Binding AvailableTunneledVariableNames}"
                          Margin="0,5,0,0" Grid.Row="1" Grid.Column="1"></ComboBox>
            </Grid>
            <Label Margin="0,15,0,0">Advanced Options</Label>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Margin="0,0,20,0">Alternative Name:</Label>
                <Label Margin="0,10,0,0" Grid.Row="1">Converted Type:</Label>
                <Label Margin="0,10,0,0" Grid.Row="2">Type Converter:</Label>

                <TextBox Text="{Binding AlternativeName}" Grid.Column="1" KeyDown="TunneledVariableTextBox_KeyDown"></TextBox>
                <ComboBox 
                    ItemsSource="{Binding AvailableOverridingTypes}"
                    SelectedItem="{Binding SelectedOverridingType}"
                    Margin="0,10,0,0" Grid.Column="1" Grid.Row="1"></ComboBox>
                <ComboBox 
                    ItemsSource="{Binding AvailableTypeConverters}"
                    SelectedItem="{Binding SelectedTypeConverter}"
                    
                    Margin="0,10,0,0" Grid.Column="1" Grid.Row="2"></ComboBox>
            </Grid>
        </StackPanel>

        <Grid x:Name="CreateNewVariableUi" Grid.Row="2" Margin="10" Visibility="{Binding NewVariableUiVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel HorizontalAlignment="Right">
                <CheckBox 
                    IsChecked="{Binding IsShowStateCategoriesChecked}"
                    VerticalAlignment="Bottom" >Show State Categories</CheckBox>

            </StackPanel>
            <Label VerticalAlignment="Bottom" HorizontalAlignment="Left">Type:</Label>
            <ListBox 
                ItemsSource="{Binding AvailableNewVariableTypes}"
                SelectedItem="{Binding SelectedNewType}"
                Grid.Row="1">
            </ListBox>
            <StackPanel Grid.Row="2" Margin="0,4,0,0">
                <Label Margin="0,0,0,-4">Name:</Label>
                <TextBox x:Name="NewVariableTextBox" Text="{Binding NewVariableName}" KeyDown="TextBox_KeyDown" Margin="0,0,0,6"></TextBox>
                <CheckBox 
                    IsChecked="{Binding IsList}"
                    Visibility="{Binding ListCheckBoxVisibility}"
                    VerticalAlignment="Bottom" >List</CheckBox>
                <CheckBox 
                    IsChecked="{Binding IsStatic}"
                    >Static (all objects share one copy of the same variable)</CheckBox>
                <CheckBox
                    IsChecked="{Binding SetByDerived}"
                    >Can Be Set By Derived</CheckBox>
            </StackPanel>
        </Grid>
        <StackPanel Orientation="Horizontal" Grid.Row="4" HorizontalAlignment="Right">
            <Button Margin="10" Width="70" Click="OkButton_Click">OK</Button>
            <Button Margin="0,10,10,10" Width="70" Click="CancelButton_Click">Cancel</Button>
        </StackPanel>
    </Grid>
</Window>
